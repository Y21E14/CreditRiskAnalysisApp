@model CreditRiskAnalysisApp.Models.AnalysisInput

@{
    ViewData["Title"] = "Predict Company Credit Risk";
}

<h1>Predict Company Credit Risk</h1>

<button type="button" class="btn btn-secondary mb-3" onclick="location.href='@Url.Action("Index", "Report")'">View Credit Risk Dashboard</button>

<form asp-action="SubmitForm" method="post">
    <div class="form-group mb-3">
        <label asp-for="TotalAsset">Total Asset:</label>
        <input asp-for="TotalAsset" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalAsset" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Cash">Cash:</label>
        <input asp-for="Cash" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="Cash" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalDebtInCurrentLiabilities">Total Debt in Current Liabilities:</label>
        <input asp-for="TotalDebtInCurrentLiabilities" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalDebtInCurrentLiabilities" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalLongTermDebt">Total Long-Term Debt:</label>
        <input asp-for="TotalLongTermDebt" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalLongTermDebt" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="EarningsBeforeInterest">Earnings Before Interest:</label>
        <input asp-for="EarningsBeforeInterest" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="EarningsBeforeInterest" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="GrossProfitLoss">Gross Profit (Loss):</label>
        <input asp-for="GrossProfitLoss" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="GrossProfitLoss" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalLiabilities">Total Liabilities:</label>
        <input asp-for="TotalLiabilities" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalLiabilities" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="RetainedEarnings">Retained Earnings:</label>
        <input asp-for="RetainedEarnings" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="RetainedEarnings" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalStockholdersEquity">Total Stockholders Equity:</label>
        <input asp-for="TotalStockholdersEquity" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalStockholdersEquity" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalInterestAndRelatedExpense">Total Interest and Related Expense:</label>
        <input asp-for="TotalInterestAndRelatedExpense" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalInterestAndRelatedExpense" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalMarketValue">Total Market Value:</label>
        <input asp-for="TotalMarketValue" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalMarketValue" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalInventories">Total Inventories:</label>
        <input asp-for="TotalInventories" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalInventories" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="TotalRevenue">Total Revenue:</label>
        <input asp-for="TotalRevenue" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="TotalRevenue" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="OperatingActivitiesNetCashFlow">Operating Activities - Net Cash Flow:</label>
        <input asp-for="OperatingActivitiesNetCashFlow" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="OperatingActivitiesNetCashFlow" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="FinancingActivitiesNetCashFlow">Financing Activities - Net Cash Flow:</label>
        <input asp-for="FinancingActivitiesNetCashFlow" autocomplete="off" class="form-control input-short" required />
        <span asp-validation-for="FinancingActivitiesNetCashFlow" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary mt-2">Submit</button>
</form>



@if (ViewBag.Prediction != null)
{
    <div class="alert alert-info mt-4">
        <h4>Prediction Results</h4>
        <p><strong>Credit Risk:</strong> @ViewBag.Prediction.CreditRiskLabel</p>
        <p><strong>Credit Risk Numerical:</strong> @ViewBag.Prediction.CreditRiskNumerical</p>
        <p><strong>Debt Service Coverage Ratio:</strong> @ViewBag.Prediction.CalculatedRatios.DebtServiceCoverageRatio</p>
        <p><strong>Debt to Equity Ratio:</strong> @ViewBag.Prediction.CalculatedRatios.DebtToEquityRatio</p>
        <p><strong>Gross Profit Margin:</strong> @ViewBag.Prediction.CalculatedRatios.GrossProfitMargin</p>
        <p><strong>Working Capital Ratio:</strong> @ViewBag.Prediction.CalculatedRatios.WorkingCapitalRatio</p>

        <!-- Form for company selection and saving prediction -->
        <form asp-action="SavePrediction" method="post">
            <div>
                <label for="companyId">Select Company to Save Prediction:</label>
                <select name="companyId" asp-items="ViewBag.Companies" required></select>
            </div>

            <!-- Hidden fields to pass prediction data -->
            <input type="hidden" name="CreditRiskLabel" value="@ViewBag.Prediction.CreditRiskLabel" />
            <input type="hidden" name="CreditRiskNumerical" value="@ViewBag.Prediction.CreditRiskNumerical" />
            <input type="hidden" name="CalculatedRatios.DebtServiceCoverageRatio" value="@ViewBag.Prediction.CalculatedRatios.DebtServiceCoverageRatio" />
            <input type="hidden" name="CalculatedRatios.DebtToEquityRatio" value="@ViewBag.Prediction.CalculatedRatios.DebtToEquityRatio" />
            <input type="hidden" name="CalculatedRatios.GrossProfitMargin" value="@ViewBag.Prediction.CalculatedRatios.GrossProfitMargin" />
            <input type="hidden" name="CalculatedRatios.WorkingCapitalRatio" value="@ViewBag.Prediction.CalculatedRatios.WorkingCapitalRatio" />

            <button type="submit" class="btn btn-success">Save Prediction</button>
        </form>
    </div>
}

<!-- Display error messages if any -->
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        <strong>Error:</strong> @ViewBag.Error
    </div>
}

<script>
    document.getElementById("submitButton").addEventListener("click", async () => {
        const payload = {
            "Total Asset": parseFloat(document.querySelector("[name='TotalAsset']").value),
            "Cash": parseFloat(document.querySelector("[name='Cash']").value),
            "Total Debt in Current Liabilities": parseFloat(document.querySelector("[name='TotalDebtInCurrentLiabilities']").value),
            "Total Long-Term Debt": parseFloat(document.querySelector("[name='TotalLongTermDebt']").value),
            "Earnings Before Interest": parseFloat(document.querySelector("[name='EarningsBeforeInterest']").value),
            "Gross Profit (Loss)": parseFloat(document.querySelector("[name='GrossProfitLoss']").value),
            "Total Liabilities": parseFloat(document.querySelector("[name='TotalLiabilities']").value),
            "Retained Earnings": parseFloat(document.querySelector("[name='RetainedEarnings']").value),
            "Total Stockholders Equity": parseFloat(document.querySelector("[name='TotalStockholdersEquity']").value),
            "Total Interest and Related Expense": parseFloat(document.querySelector("[name='TotalInterestAndRelatedExpense']").value),
            "Total Market Value": parseFloat(document.querySelector("[name='TotalMarketValue']").value),
            "Total Inventories": parseFloat(document.querySelector("[name='TotalInventories']").value),
            "Total Revenue": parseFloat(document.querySelector("[name='TotalRevenue']").value),
            "Operating Activities - Net Cash Flow": parseFloat(document.querySelector("[name='OperatingActivitiesNetCashFlow']").value),
            "Financing Activities - Net Cash Flow": parseFloat(document.querySelector("[name='FinancingActivitiesNetCashFlow']").value)
        };

        const resultDiv = document.getElementById("credit-risk-result");

        try {
            const response = await fetch("http://127.0.0.1:5000/predict", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(payload),
            });

            const result = await response.json();

            if (response.ok) {
                resultDiv.innerHTML = `
                        <strong>Credit Risk:</strong> ${result.credit_risk_label}<br>
                        <strong>Credit Risk Numerical:</strong> ${result.credit_risk_numerical}<br>
                        <strong>Debt Service Coverage Ratio:</strong> ${result.calculated_ratios["Debt Service Coverage Ratio"]}<br>
                        <strong>Debt to Equity Ratio:</strong> ${result.calculated_ratios["Debt to Equity Ratio"]}<br>
                        <strong>Gross Profit Margin:</strong> ${result.calculated_ratios["Gross Profit Margin"]}<br>
                        <strong>Working Capital Ratio:</strong> ${result.calculated_ratios["Working Capital Ratio"]}
                    `;
                resultDiv.style.display = "block";
                resultDiv.classList.replace("alert-danger", "alert-info");
            } else {
                resultDiv.textContent = `Error: ${result.error || "Unknown error"}`;
                resultDiv.style.display = "block";
                resultDiv.classList.replace("alert-info", "alert-danger");
            }
        } catch (error) {
            resultDiv.textContent = `An exception occurred: ${error.message}`;
            resultDiv.style.display = "block";
            resultDiv.classList.replace("alert-info", "alert-danger");
        }
    });

</script>